# Generated by Django 2.1.dev20180423170307 on 2019-04-30 19:30

from decimal import Decimal
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Adelanto',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('importe', models.DecimalField(blank=True, decimal_places=2, default=Decimal('0'), max_digits=8, validators=[django.core.validators.MinValueValidator(0, 'El importe del adelanto no puede ser negativo')])),
            ],
        ),
        migrations.CreateModel(
            name='Estado',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('marca', models.DateTimeField(auto_now_add=True)),
                ('tipo', models.PositiveSmallIntegerField(choices=[(0, 'Estado'), (1, 'creada'), (3, 'presupuestada'), (2, 'programada'), (5, 'realizada'), (6, 'facturada'), (4, 'cancelada')])),
            ],
            options={
                'get_latest_by': 'marca',
            },
        ),
        migrations.CreateModel(
            name='Practica',
            fields=[
                ('tipo', models.CharField(choices=[('C', 'Consulta'), ('Q', 'Cirugia'), ('I', 'Internacion')], editable=False, max_length=1)),
                ('id', models.AutoField(editable=False, primary_key=True, serialize=False, unique=True)),
                ('precio', models.DecimalField(blank=True, decimal_places=2, default=Decimal('0'), max_digits=8, validators=[django.core.validators.MinValueValidator(0, 'El precio de la practica no puede ser negativo')])),
            ],
        ),
        migrations.CreateModel(
            name='PracticaProducto',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cantidad', models.PositiveSmallIntegerField(validators=[django.core.validators.MinValueValidator(1, 'La cantidad debe ser mayor que cero')])),
                ('precio', models.DecimalField(decimal_places=2, max_digits=8, validators=[django.core.validators.MinValueValidator(Decimal('0'), message='El precio no puede ser menor a 0.00')])),
            ],
        ),
        migrations.CreateModel(
            name='PracticaServicio',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cantidad', models.PositiveSmallIntegerField(validators=[django.core.validators.MinValueValidator(1, 'La cantidad debe ser mayor que cero')])),
                ('precio', models.DecimalField(decimal_places=2, max_digits=8, validators=[django.core.validators.MinValueValidator(Decimal('0'), message='El precio no puede ser menor a 0.00')])),
            ],
        ),
        migrations.CreateModel(
            name='RealizadaProducto',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cantidad', models.PositiveSmallIntegerField(validators=[django.core.validators.MinValueValidator(1, 'La cantidad debe ser mayor que cero')])),
                ('precio', models.DecimalField(decimal_places=2, max_digits=8, validators=[django.core.validators.MinValueValidator(Decimal('0'), message='El precio no puede ser menor a 0.00')])),
            ],
        ),
        migrations.CreateModel(
            name='RealizadaServicio',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cantidad', models.PositiveSmallIntegerField(validators=[django.core.validators.MinValueValidator(1, 'La cantidad debe ser mayor que cero')])),
                ('precio', models.DecimalField(decimal_places=2, max_digits=8, validators=[django.core.validators.MinValueValidator(Decimal('0'), message='El precio no puede ser menor a 0.00')])),
                ('observaciones', models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='Cancelada',
            fields=[
                ('estado_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='GestionDePracticas.Estado')),
                ('motivo', models.TextField(blank=True)),
            ],
            bases=('GestionDePracticas.estado',),
        ),
        migrations.CreateModel(
            name='Creada',
            fields=[
                ('estado_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='GestionDePracticas.Estado')),
            ],
            options={
                'abstract': False,
            },
            bases=('GestionDePracticas.estado',),
        ),
        migrations.CreateModel(
            name='Facturada',
            fields=[
                ('estado_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='GestionDePracticas.Estado')),
            ],
            bases=('GestionDePracticas.estado',),
        ),
        migrations.CreateModel(
            name='Presupuestada',
            fields=[
                ('estado_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='GestionDePracticas.Estado')),
                ('diasMantenimiento', models.PositiveSmallIntegerField(validators=[django.core.validators.MinValueValidator(1, 'Los dias de mantenimiento del presupuesto deben ser mas que cero')])),
            ],
            options={
                'abstract': False,
            },
            bases=('GestionDePracticas.estado',),
        ),
        migrations.CreateModel(
            name='Programada',
            fields=[
                ('estado_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='GestionDePracticas.Estado')),
                ('inicio', models.DateTimeField()),
                ('finalizacion', models.DateTimeField()),
                ('motivoReprogramacion', models.CharField(blank=True, max_length=300, verbose_name='Motivo de reprogramacion')),
            ],
            options={
                'abstract': False,
            },
            bases=('GestionDePracticas.estado',),
        ),
        migrations.CreateModel(
            name='Realizada',
            fields=[
                ('estado_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='GestionDePracticas.Estado')),
                ('inicio', models.DateTimeField()),
                ('finalizacion', models.DateTimeField()),
                ('condicionPreviaMascota', models.TextField(blank=True)),
                ('resultados', models.TextField(blank=True)),
            ],
            bases=('GestionDePracticas.estado',),
        ),
    ]
